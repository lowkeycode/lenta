
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
    font-size: 62.5%;

    @media only screen and (max-width: $bp-largest) {
        font-size: 50%;
    }
    

    @media only screen and (max-width: $bp-sml) {
        font-size: 40%;
    }

}
*::selection {
    background-color: var(--color-grey-light);
}

body {
    font-family: var(--font-primary);
    font-weight: 300;
    line-height: 1.6;
    color: var(--color-grey-dark);
    padding: 3rem;

}

.container {
    display: grid;
    /* First analyze overall layout and
    how many sections there are (5)
    and size the rows first thinking about responsivness
    and how the rows & content need to flow when resized
    */
    grid-template-rows: 85vh repeat(4, min-content);
    /* Second we define our column tracks (common sizes
    are 8, 12 or 16 column grids) Trento will use 8.
    Start by putting all at 1fr to get a feel for the
    columns. In this case we will want max width say 1140px.
    Split them up into rem. 1140/8 = 142... approx 14rem.
    Then use minmax to allow them to grow from content up
    to the 14rem. Using the 1fr on each side of the inner 6
    columns will allow for full bleed in some sections.
    Always name the columns. The col start & col end will create
    create 6 colstarts & ends from number 1 to 6
    */
    // grid-template-columns: repeat(8, 1fr);
    grid-template-columns: [full-start] minmax(4rem, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 9.5rem) [col-end]) [center-end] minmax(4rem, 1fr) [full-end];

    // Dev purposes for easier sight
    // & > * {
    //     padding: 4rem;
    //     font-size: 3rem;
    // }

    
}








